{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAIJ,GACL,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLR,EACFM,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,GAEpBA,E,IA7CQU,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAYN,IAA8BC,EAAAC,OAAOC,YAAY,IAAIC,SAASL,EAAMM,SAA9DC,EAAwBL,EAAxBf,MAAOqB,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OACnBF,EAAQG,OAAOH,GACfC,EAAOE,OAAOF,GACd,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAC3B1B,EAAc0B,EAAGJ,GACdK,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjDoB,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  ///////1\n  // let delay = event.currentTarget.delay.value;\n  // let step = event.currentTarget.step.value;\n  // let amount = event.currentTarget.amount.value;\n  //////2\n  // let {delay, step, amount} = event.target;\n  // let delayValue = delay.value\n  // let stepValue = step.value\n  // let amountValue = amount.value\n  /////////////////3\n  let { delay, step, amount } = Object.fromEntries(new FormData(event.target));\n  delay = Number(delay);\n  step = Number(step);\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(shouldResolve);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","ref","Object","fromEntries","FormData","target","delay1","step","amount","Number","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.526bb742.js.map"}